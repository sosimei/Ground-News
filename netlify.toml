[build]
  base    = "."
  publish = "react-app/build"
  command = "node scripts/prepare-env.js && cd react-app && npm install && npm run build:css && CI=false npm run build"

[dev]
  command = "cd react-app && npm start"
  port    = 3000
  publish = "react-app/build"

[functions]
  directory    = "netlify/functions"
  node_bundler = "esbuild"
  included_files = ["netlify/functions/**/*.js"]
  # 타임아웃은 Netlify 대시보드에서 직접 설정됩니다 (최소 26초 이상 권장)

[[functions]]
  included_files = ["netlify/functions/utils/*.js"]
  pattern = "debug-auth"
  
[[functions]]
  included_files = ["netlify/functions/utils/*.js", "netlify/functions/models/*.js"]
  pattern = "refresh-token"

[[functions]]
  included_files = ["netlify/functions/utils/*.js", "netlify/functions/models/*.js"]
  pattern = "me"

[build.environment]
  SITE_URL     = "https://polireviewer.netlify.app"
  NODE_VERSION = "18"
  NODE_ENV     = "production"
  CI           = "false"

# 1) OAuth 콜백 라우팅 - SPA로 처리
[[redirects]]
  from   = "/auth/callback"
  to     = "/index.html"
  status = 200
  force  = true

# 2) 인증용 라우트 (/api/auth/:provider 등) → 해당 provider 함수로 직접 매핑
[[redirects]]
  from   = "/api/auth/:provider"
  to     = "/.netlify/functions/:provider"
  status = 200
  force  = true
  headers = {Access-Control-Allow-Origin="https://polireviewer.netlify.app", Access-Control-Allow-Methods="GET,POST,OPTIONS", Access-Control-Allow-Headers="Content-Type, Authorization, X-CSRF-Token", Access-Control-Allow-Credentials="true"}

# 3) 나머지 함수들 (/api/...) → 함수 파일명(:splat)으로 매핑
[[redirects]]
  from   = "/api/*"
  to     = "/.netlify/functions/:splat"
  status = 200
  force  = true
  headers = {Access-Control-Allow-Origin="https://polireviewer.netlify.app", Access-Control-Allow-Methods="GET,POST,OPTIONS", Access-Control-Allow-Headers="Content-Type, Authorization, X-CSRF-Token", Access-Control-Allow-Credentials="true"}

# 4) SPA 페일백: 나머지 모든 라우트 → index.html
[[redirects]]
  from   = "/*"
  to     = "/index.html"
  status = 200